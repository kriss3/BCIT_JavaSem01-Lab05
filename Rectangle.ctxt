#BlueJ class context
comment0.params=
comment0.target=Rectangle()
comment0.text=\r\n\ Parameterless\ constructor\ <br>\r\n\ Increments\ static\ counter\ when\ new\ object\ is\ created\ <br>\r\n\ Assigns\ default\ values\ to\ Length\ and\ Width\r\n
comment1.params=rectangleLengthInCm\ rectangleWidthInCm
comment1.target=Rectangle(int,\ int)
comment1.text=\r\n\ Custom\ constructor\ taking\ two\ params\ for\ rectangle\ Length\ and\ Width\ <br>\r\n\ Increment\ class\ level\ counter;\ <br>\r\n\ Checks\ passed\ in\ parameters\ and\ if\ any\ of\ them\ is\ less\ then\ 0\ default\ values\r\n\ are\ assigned\ to\ instance\ variables\r\n\ @param\ rectangle\ length\ as\ int;\r\n\ @param\ rectangle\ width\ as\ int\r\n
comment10.params=
comment10.target=int\ getCount()
comment10.text=\r\n\ Class\ level\ method\ that\ return\ a\ number\ of\ created\ Rectangle\ objects\r\n\ @return\ counter\ of\ all\ rectangles\ as\ int\r\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\r\n\ Public\ method\ showing\ details\ of\ the\ rectagled\ class\ (its\ private\ members)\ <br>\r\n\ It\ does\ not\ take\ any\ parameters\ <br>\r\n\ @return\ details\ of\ rectangle\ class\ as\ String\r\n
comment2.params=rectangleLengthInCm\ rectangleWidthInCm
comment2.target=Rectangle(double,\ double)
comment2.text=\r\n\ Custom\ constructor\ taking\ two\ params\ for\ rectangle\ Length\ and\ Width\ <br>\r\n\ Increment\ class\ level\ counter;\ <br>\r\n\ Checks\ passed\ in\ parameters\ and\ if\ any\ of\ them\ is\ less\ then\ 0\ default\ values\r\n\ are\ assigned\ to\ instance\ variables\r\n\ @param\ rectangle\ length\ as\ double;\r\n\ @param\ rectangle\ width\ as\ double\r\n
comment3.params=
comment3.target=double\ getRectangleLengthInCm()
comment3.text=\r\n\ Public\ getter\ for\ RectangleLengthInCm\ <br>\r\n\ It\ does\ not\ take\ any\ parameters\r\n\ @return\ length\ of\ rectangle\ as\ Double\r\n
comment4.params=rectangleLengthInCm
comment4.target=void\ setRectangleLengthInCm(double)
comment4.text=\r\n\ Public\ setter\ for\ RectangleLengthInCm\ <br>\r\n\ It\ does\ return\ any\ value\r\n\ @param\ new\ value\ of\ rectangle\ Length\ in\ cm\ as\ Double\r\n
comment5.params=
comment5.target=double\ getrectangleWidthInCm()
comment5.text=\r\n\ Public\ getter\ for\ RectangleWidthInCm\ <br>\r\n\ It\ does\ not\ take\ any\ parameters\r\n\ @return\ width\ of\ rectangle\ as\ Double\r\n
comment6.params=rectangleWidthInCm
comment6.target=void\ setRectangleWidthInCm(double)
comment6.text=\r\n\ Public\ setter\ for\ RectangleWidthInCm\ <br>\r\n\ It\ does\ return\ any\ value\r\n\ @param\ new\ value\ of\ rectangle\ widht\ in\ cm\ as\ double\r\n
comment7.params=
comment7.target=boolean\ isSquare()
comment7.text=\r\n\ Public\ method\ isSquare\ takes\ no\ parametes\ and\ returns\ flag\ whether\ Rectangles\r\n\ is\ actually\ a\ Square\r\n\ @return\ a\ flag\ as\ a\ Boolean\r\n
comment8.params=format
comment8.target=double\ getArea(char)
comment8.text=\r\n\ Public\ method\ that\ calculates\ \r\n\ @param\ format\ as\ char\r\n\ @return\ area\ of\ a\ rectangle\ as\ double\r\n
comment9.params=
comment9.target=double\ getPerimeter()
comment9.text=\r\n\ Public\ method\ that\ calculates\ the\ perimeteer\ of\ a\ rectangle\ <br>\r\n\ It\ does\ not\ take\ any\ input\ parameters\r\n\ @return\ returns\ perimeter\ of\ a\ rectangle\ as\ double;\r\n
numComments=12
